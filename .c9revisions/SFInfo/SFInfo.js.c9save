{"ts":1355145498794,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"var lastSentRequestId = 1;\nvar lastReceivedRequestId = 0;\nvar id = 1;\nvar token = null;\nvar sfurl = null;\nvar sfportalurl = null;\nvar responseFunc;\nvar searchTerm;\nvar matches = google.contentmatch.getContentMatches();\nvar matchList = document.createElement('UL');\nvar listItem;\nvar extractedText;\nvar sender_email = '';\nvar subject = '';\nvar email_body = '';\nvar message_id = '';\n\nfor (var match in matches) {\n  for (var key in matches[match]) {\n    console.log(\"!!!!!!!!!!!!!!!!!! key/value :\" + key + \"/\" + matches[match][key]);\n    if (key == 'sender_email') {\n      sender_email = matches[match][key];\n    }\n    if (key == 'subject') {\n      subject = matches[match][key];\n    }\n    if (key == 'email_body') {\n      email_body = matches[match][key];\n    }\n    if (key == 'message_id') {\n      message_id = matches[match][key];\n    }\n  }\n}\ndocument.body.appendChild(matchList);\n//gadgets.window.adjustHeight(200);\ngoogle.load(\"jquery\", \"1\");\ngoogle.load(\"jqueryui\", \"1\");\n\n\n\n\nvar openfunc = function() {\n  // Put Jquery here\n  var username;\n  var password;\n  $(document).ready(function() {\n    dnd_init();\n    $(\"#GoBtn\").click(function() {\n      //      fetchData();\n      //      return;\n      username = $(\"#username\").val();\n      password = $(\"#password\").val();\n      //      alert(\"jQuery works, you entered- \" + sender_email + username + password);\n      var prefs = new gadgets.Prefs();\n      prefs.set(\"Username\", username);\n      prefs.set(\"Password\", password);\n      readSFData();\n    });\n    ////////////////////////    \n    $(\"#attachbutton\").button();\n    $(\"#attachbutton\").button(\"disable\");\n    $(\"#attachbutton\").click(function() {\n      //    alert($( \"#contactid\" ).val());\n      //    alert($( 'select.Opp').val());\n      sf_attach_rest(sfurl, token, $(\"#contactid\").val(), $('select.Opp').val());\n    });\n    \n    $(\"#contactsearch\").click(function(){\n        // Select input field contents\n        this.select();\n        return true;\n    });    \n    $(\"#contactsearch\").autocomplete({\n      source: function(request, response) {\n        responseFunc = response;\n        searchTerm = request;\n        sf_searchContacts();\n      },\n      minLength: 2,\n      select: function(event, ui) {\n/*\t\t\t\talert( ui.item ?\n\t\t\t\t\t\"Selected: \" + ui.item.label :\n\t\t\t\t\t\"Nothing selected, input was \" + this.value);\n*/\n        if (ui.item != null) {\n          //          sf_attach_rest(sfurl, token,ui.item.value);\n          $(\"#attachbutton\").button(\"enable\");\n          sf_queryOpps(ui.item.record);\n          $(\"#contactsearch\").val(ui.item.label);\n          $(\"#contactid\").val(ui.item.value);\n          showContactDiv(ui.item.record);\n          return false;\n        }\n      },\n      //      focus: function( event, ui ) {\n      //  \t\t\t$( \"#contactsearch\" ).val( ui.item.label );\n      //\t\t\t\treturn false;\n      //\t\t\t},      \n      open: function() {\n        $(this).removeClass(\"ui-corner-all\").addClass(\"ui-corner-top\");\n      },\n      close: function() {\n        $(this).removeClass(\"ui-corner-top\").addClass(\"ui-corner-all\");\n      }\n    }).data(\"autocomplete\")._renderItem = function(ul, item) {\n      if (item.record.Account != null) {\n        var line2 = item.record.Account.Name;\n      }\n      else {\n        var line2 = \"-\";\n      }\n      var line = \"<a>\" + item.label + \" --- \" + line2 + \"</a>\";\n      return $(\"<li></li>\").data(\"item.autocomplete\", item).append(line).appendTo(ul);\n    };\n    ////////////////    \n    $('#openbuttondiv').remove();\n    gadgets.window.adjustHeight(200);  \n    readSFData();\n    fetchData();\n  });\n}\n\nvar startupfunc = function() {\n  $(document).ready(function() {\n    \n\n\n    $(\"#openbutton\").button();\n//    $(\"#openbutton\").button(\"disable\");\n    $(\"#openbutton\").click(function() {\n      openfunc();\n    });\n\n  });\n}\n\n\n_IG_RegisterOnloadHandler(startupfunc);\n////////////////////////////////////\n\nfunction sf_searchContacts() {\n  var queryString = \"FIND {*\" + searchTerm.term + \"*} RETURNING Contact(Id, Name, phone, MobilePhone, HomePhone, OtherPhone, Weiteres_Telefon_direkt__c, Firstname, Lastname, Account.Name, Account.Id)  \";\n  var restServerUrl = sfurl.split(\"/\")[2];\n  restServerUrl = restServerUrl.replace(\"-api\", \"\");\n  restServerUrl = \"https://\" + restServerUrl;\n  console.log(\"!!!!!!!!!!!!!!!!!! restServerUrl :\" + restServerUrl);\n  var callUrl = restServerUrl + \"/services/data/v23.0/search/?q=\" + encodeURIComponent(queryString);\n  //console.log(\"!!!!!!!!!!!!!!!!!! callUrl :\" + callUrl);  \n  var params = {};\n  params[gadgets.io.RequestParameters.METHOD] = gadgets.io.MethodType.GET;\n  params[gadgets.io.RequestParameters.CONTENT_TYPE] = gadgets.io.ContentType.JSON;\n  //params[gadgets.io.RequestParameters.POST_DATA] = postdata;\n  params[gadgets.io.RequestParameters.HEADERS] = {\n    \"Authorization\": \"OAuth \" + token,\n    \"X-PrettyPrint\": \"1\"\n  };\n  var callback = function(obj) {\n      if (obj.data == null) {\n        responseFunc([]);\n        return;\n      }\n      var arr = [];\n      for (var i = 0; i < obj.data.length; i++) {\n        var record = obj.data[i];\n        arr.push({\n          label: record.Name,\n          value: record.Id,\n          record: record\n        });\n      }\n      //      responseFunc([{label:\"hallo\",value:\"depp\"},{label:\"hallo\",value:\"depp\"},{label:\"hallo\",value:\"depp\"}]);\n      responseFunc(arr);\n      };\n  gadgets.io.makeRequest(callUrl, callback, params);\n}\n\nfunction sf_queryOpps(record) {\n//  var queryString = \"SELECT Id, Name from Opportunity where AccountId = '\" + record.Account.Id + \"' and StageName != 'Closed / Won' and  StageName != 'Closed / Lost' order by Name asc\";\n  var queryString = \"SELECT Id, Name from Opportunity where AccountId = '\" + record.Account.Id + \"' order by Name asc\";\n  var restServerUrl = sfurl.split(\"/\")[2];\n  restServerUrl = restServerUrl.replace(\"-api\", \"\");\n  restServerUrl = \"https://\" + restServerUrl;\n  console.log(\"!!!!!!!!!!!!!!!!!! restServerUrl :\" + restServerUrl);\n  var callUrl = restServerUrl + \"/services/data/v23.0/query/?q=\" + encodeURIComponent(queryString);\n  //console.log(\"!!!!!!!!!!!!!!!!!! callUrl :\" + callUrl);  \n  var params = {};\n  params[gadgets.io.RequestParameters.METHOD] = gadgets.io.MethodType.GET;\n  params[gadgets.io.RequestParameters.CONTENT_TYPE] = gadgets.io.ContentType.JSON;\n  //params[gadgets.io.RequestParameters.POST_DATA] = postdata;\n  params[gadgets.io.RequestParameters.HEADERS] = {\n    \"Authorization\": \"OAuth \" + token,\n    \"X-PrettyPrint\": \"1\"\n  };\n  var callback = function(obj) {\n      $('select.Opp').empty();\n      var option = $('<option />').attr({\n        value: null\n      });\n      option.html(\"\");\n      $('select.Opp').append(option);\n      for (var i = 0; i < obj.data.records.length; i++) {\n        var record = obj.data.records[i];\n        var option = $('<option />').attr({\n          value: record.Id\n        });\n        option.html(record.Name);\n        console.log(option);\n        $('select.Opp').append(option);\n      }\n      };\n  gadgets.io.makeRequest(callUrl, callback, params);\n}\n\nfunction showContactDiv(record) {\n    var div;\n    var div2;\n//    div = document.createElement('div');\n    div = document.getElementById(\"contactDetail\");\n    $('#contactDetail').empty();\n\n    var dispName = record.Name;\n    if (record.Account != null)\n      dispName += '( ' + record.Account.Name + ' )';\n    $('#contactDetail').append('<div style=\"display: inline; \"><a href=\"https://parxch.my.salesforce.com/' + record.Id + '\" target=\"_blank\">' + dispName + '</a></div>');\n\n\n    for (var i in record) {\n      if (i.indexOf(\"Phone\") >= 0 || i.indexOf(\"Telefon\") >= 0) {\n        if (record[i] != null) {\n          $('#contactDetail').append('<div class=\"phone\">' + i + ': ' + record[i] + '</div>');\n      \n    \n          \n        }\n      }\n    }\n    //  div2.className = \"droppable ui-widget-header ui-droppable\";\n    //  div2.id = record.Id;\n    //  extractedText = document.createTextNode(record.Name);   \n    //  div2.appendChild(extractedText);\n    //  div.appendChild(div2);\n\n//listItem.appendChild(div);\n\n//document.getElementById(\"contactDetail\").appendChild(div);\n\n$('.phone').click(function() {\n    console.log('Handler for .click() called.');\n    console.log($(this)[0].innerText);\n    callNumber($(this)[0].innerText.split(\":\")[1]);\n  });\n}\n\n//////////////////////////////\n\nfunction showOneSection(toshow) {\n  var sections = ['main', 'approval', 'waiting'];\n  for (var i = 0; i < sections.length; ++i) {\n    var s = sections[i];\n    var el = document.getElementById(s);\n    if (s === toshow) {\n      el.style.display = \"block\";\n    }\n    else {\n      el.style.display = \"none\";\n    }\n  }\n}\n\nfunction fetchData() {\n  var params = {};\n  var url = \"https://spreadsheets.google.com/feeds/worksheets/0Ag5xGwdJpcHXdGUxMVRfTmZHMVcwd0RqZUZnU1E3SHc/private/full?alt=json\";\n  //      url = \"https://spreadsheets.google.com/feeds/list/0Ag5xGwdJpcHXdGUxMVRfTmZHMVcwd0RqZUZnU1E3SHc/od4/private/full?alt=json\";\n  params[gadgets.io.RequestParameters.CONTENT_TYPE] = gadgets.io.ContentType.JSON;\n  params[gadgets.io.RequestParameters.AUTHORIZATION] = gadgets.io.AuthorizationType.OAUTH;\n  params[gadgets.io.RequestParameters.OAUTH_SERVICE_NAME] = \"google\";\n  params[gadgets.io.RequestParameters.OAUTH_USE_TOKEN] = \"always\";\n  params[gadgets.io.RequestParameters.METHOD] = gadgets.io.MethodType.GET;\n  params[gadgets.io.RequestParameters.HEADERS] = {\n    \"X-PrettyPrint\": \"1\",\n    \"GData-Version\": \"3.0\"\n  };\n  gadgets.io.makeRequest(url, function(response) {\n    console.log(\"!!!!!!!!!!!!!!!!!! response :\" + response);\n    if (response.oauthApprovalUrl) {\n      // Create the popup handler. The onOpen function is called when the user\n      // opens the popup window. The onClose function is called when the popup\n      // window is closed.\n      var popup = shindig.oauth.popup({\n        destination: response.oauthApprovalUrl,\n        windowOptions: null,\n        onOpen: function() {\n          showOneSection('waiting');\n        },\n        onClose: function() {\n          fetchData();\n        }\n      });\n      // Use the popup handler to attach onclick handlers to UI elements.  The\n      // createOpenerOnClick() function returns an onclick handler to open the\n      // popup window.  The createApprovedOnClick function returns an onclick\n      // handler that will close the popup window and attempt to fetch the user's\n      // data again.\n      var personalize = document.getElementById('personalize');\n      personalize.onclick = popup.createOpenerOnClick();\n      var approvaldone = document.getElementById('approvaldone');\n      approvaldone.onclick = popup.createApprovedOnClick();\n      showOneSection('approval');\n    }\n    else if (response.data) {\n      showOneSection('main');\n      //postData();\n    }\n    else {\n      // The response.oauthError and response.oauthErrorText values may help debug\n      // problems with your gadget.\n      var main = document.getElementById('main');\n      var err = document.createTextNode('OAuth error: ' + response.oauthError + ': ' + response.oauthErrorText);\n      main.appendChild(err);\n      showOneSection('main');\n    }\n  }, params);\n}\n\nfunction dnd_init() {\n  ///////////\n  $(\".draggable\").draggable();\n  $(\".droppable\").droppable({\n    hoverClass: \"ui-state-active\",\n    drop: function(event, ui) {\n      $(this).addClass(\"ui-state-highlight\").find(\"p\").html(\"Dropped!\");\n      //    gadgets.window.adjustHeight(50);    \n      //    var msg = new gadgets.MiniMessage(__MODULE_ID__);\n      var msg = new gadgets.MiniMessage();\n      msg.createDismissibleMessage(\"Attach to \" + $(this)[0].id);\n      sf_attach_rest(sfurl, token, $(this)[0].id)\n    }\n  });\n  $('.phone').click(function() {\n    console.log('Handler for .click() called.');\n    console.log($(this)[0].innerText);\n    callNumber($(this)[0].innerText);\n  });\n  /////////////\n}\n\nfunction readSFData() {\n  if (token == null) {\n    var postdata = \"<soapenv:Envelope xmlns:soapenv=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\" xmlns:urn=\\\"urn:partner.soap.sforce.com\\\">   <soapenv:Header>   </soapenv:Header>  <soapenv:Body>     <urn:login>        <urn:username>**username**</urn:username>        <urn:password>**password**</urn:password>      </urn:login>   </soapenv:Body></soapenv:Envelope>\";\n    var prefs = new gadgets.Prefs();\n    console.log(\"!!!!!!!!!!!!!!!!!! Username :\" + prefs.getString(\"Username\"));\n    if (prefs == null || prefs.getString(\"Username\") == null || prefs.getString(\"Username\") == '') {\n      return;\n    }\n    postdata = postdata.replace(\"**username**\", prefs.getString(\"Username\"));\n    postdata = postdata.replace(\"**password**\", prefs.getString(\"Password\"));\n    var SOAPAction = \"testaction\";\n    var url = \"https://login.salesforce.com/services/Soap/u/20.0\";\n    //      url = prefs.getString(\"Loginurl\");\n    //  makeSOAPRequest(url, SOAPAction, postdata);\n    (new SOAPRequest(url, SOAPAction, postdata, 1)).request();\n  }\n  else {\n    sf_search_rest(sfurl, token, \"FIND { \" + sender_email + \" } RETURNING contact(name, id, phone, MobilePhone, HomePhone, OtherPhone, Weiteres_Telefon_direkt__c, firstname, lastname)\");\n  }\n}\n\nfunction sf_search_rest(url, sessionId, queryString) {\n  //    console.log(\"!!!!!!!!!!!!!!!!!! SUCHE :\" + url + \" \" + queryString);  \n  var restServerUrl = url.split(\"/\")[2];\n  restServerUrl = restServerUrl.replace(\"-api\", \"\");\n  restServerUrl = \"https://\" + restServerUrl;\n  console.log(\"!!!!!!!!!!!!!!!!!! restServerUrl :\" + restServerUrl);\n  //    var callUrl = restServerUrl + \"/services/data/v20.0/sobjects/\" + encodeURIComponent('Account') + \"/describe/\";\n  //https://na1.salesforce.com/services/data/v20.0/search/?q=FIND+%7Btest%7D -H \"Authorization: OAuth token\" -H \"X-PrettyPrint:1\"\n  var callUrl = restServerUrl + \"/services/data/v20.0/search/?q=\" + encodeURIComponent(queryString);\n  //console.log(\"!!!!!!!!!!!!!!!!!! callUrl :\" + callUrl);  \n  var params = {};\n  params[gadgets.io.RequestParameters.METHOD] = gadgets.io.MethodType.GET;\n  //params[gadgets.io.RequestParameters.CONTENT_TYPE] = gadgets.io.ContentType.DOM;\n  params[gadgets.io.RequestParameters.CONTENT_TYPE] = gadgets.io.ContentType.JSON;\n  //params[gadgets.io.RequestParameters.POST_DATA] = postdata;\n  params[gadgets.io.RequestParameters.HEADERS] = {\n    \"Authorization\": \"OAuth \" + sessionId,\n    \"X-PrettyPrint\": \"1\"\n  };\n  gadgets.io.makeRequest(callUrl, restCallback, params);\n}\n\nfunction restCallback(obj) {\n  console.log(\"!!!!!!!!!!!!!!!!!! callback :\" + obj.data);\n  var listItem;\n  var extractedText;\n  var div2;\n  for (var i = 0; i < obj.data.length; i++) {\n    var record = obj.data[i];\n    console.log(\"!!!!!!!!!!!!!!!!!! record :\" + record);\n    listItem = document.createElement('LI');\n    div = document.createElement('div');\n    div.className = \"droppable ui-widget-header ui-droppable\";\n    div.id = record.Id;\n    div2 = document.createElement('div');\n    div2.style.display = \"inline\";\n    var a = document.createElement('A');\n    a.href = 'https://parxch.my.salesforce.com/' + record.Id;\n    a.target = \"_blank\";\n    a.appendChild(document.createTextNode(record.Name));\n    div2.appendChild(a);\n    div.appendChild(div2);\n    for (var i in record) {\n      if (i.indexOf(\"Phone\") >= 0 || i.indexOf(\"Telefon\") >= 0) {\n        if (record[i] != null) {\n          console.log(i + record[i]);\n          div2 = document.createElement('div');\n          div2.className = \"phone\";\n/*\n        div2.style.display = \"inline\";\n        div2.style.background = \"lightgray\";\n        */\n          div2.appendChild(document.createTextNode(record[i]));\n          div.appendChild(div2);\n        }\n      }\n    }\n    //  div2.className = \"droppable ui-widget-header ui-droppable\";\n    //  div2.id = record.Id;\n    //  extractedText = document.createTextNode(record.Name);   \n    //  div2.appendChild(extractedText);\n    //  div.appendChild(div2);\n    listItem.appendChild(div);\n    matchList.appendChild(listItem);\n    gadgets.window.adjustHeight(200);\n/*\n<div class=\"droppable ui-widget-header ui-droppable ui-state-highlight\">\n  <p>Dropped!</p>\n</div>  \n  */\n  }\n  dnd_init();\n}\n\nfunction SOAPRequest(url, SOAPAction, postdata, number) {\n  this.number = number;\n  this.url = url;\n  this.SOAPAction = SOAPAction;\n  this.postdata = postdata;\n  this.request = function() {\n    try {\n      console.log('SOAPAction: ' + this.SOAPAction);\n      console.log('url : ' + this.url);\n      console.log('postdata : ' + this.postdata);\n      console.log('number : ' + this.number);\n      var params = {};\n      params[gadgets.io.RequestParameters.METHOD] = gadgets.io.MethodType.POST;\n      params[gadgets.io.RequestParameters.CONTENT_TYPE] = gadgets.io.ContentType.DOM;\n      params[gadgets.io.RequestParameters.POST_DATA] = postdata;\n      params[gadgets.io.RequestParameters.HEADERS] = {\n        \"SOAPAction\": SOAPAction,\n        \"Content-Type\": \"text/xml;charset=UTF-8\"\n      };\n      gadgets.io.makeRequest(url, this.callback, params);\n    }\n    catch (e) {\n      //console.debug(e);\n    }\n  };\n  this.callback = function(obj) {\n    if (obj.errors[0] == \"502 Error\") {\n      var prefs = new gadgets.Prefs();\n      prefs.set(\"Username\", '');\n      prefs.set(\"Password\", '');\n      readSFData();\n      return;\n    }\n    console.log(\"callback:\" + this + \" \" + obj);\n    //console.log('1');\n    //console.log(obj);\n    var document = obj.data;\n    //console.log(obj.data);\n    if (document.getElementsByTagName(\"loginResponse\").length > 0) {\n      token = document.getElementsByTagName(\"sessionId\")[0].firstChild.nodeValue;\n      sfurl = document.getElementsByTagName(\"serverUrl\")[0].firstChild.nodeValue;\n      $(\".credentials\").addClass(\"invisible\");\n      $(\"#contactsearch\").val(sender_email);\n      $(\"#contactsearch\").autocomplete(\"search\");\n      //        sf_search_rest(sfurl, token, \"FIND { \" + sender_email + \" } RETURNING contact(name, id, phone, MobilePhone, HomePhone, OtherPhone, Weiteres_Telefon_direkt__c, firstname, lastname)\");\n    }\n  };\n}\n\nfunction callNumber(number) {\n  //var callto = 'callto://sip:' + escape(number).replace('+', '00') + '@e-fon.ch';\n  var callto = 'phoner://' + escape(number).replace('+', '00');\n  location.href = callto;\n}\n\nfunction sf_attach_restSpread(sfurl, sessionId, parentid, msg_id) {\n  var params = {};\n  var prefs = new gadgets.Prefs();\n  var url = prefs.getString(\"sheeturl\");\n  \n  if (url == null || url == \"\") {\n    url = prompt(\"sheeturl\",\"https://spreadsheets.google.com/feeds/list/{Sheetid}/od{X}/private/full\");\n    prefs.set(\"sheeturl\", url);\n  }\n//  var url = \"https://spreadsheets.google.com/feeds/list/0Ag5xGwdJpcHXdFJMQUFuX1dWU1Jvb2dPSDJIeXVaQWc/od6/private/full\";\n\n  params[gadgets.io.RequestParameters.CONTENT_TYPE] = gadgets.io.ContentType.XML;\n  params[gadgets.io.RequestParameters.AUTHORIZATION] = gadgets.io.AuthorizationType.OAUTH;\n  params[gadgets.io.RequestParameters.OAUTH_SERVICE_NAME] = \"google\";\n  //      params[gadgets.io.RequestParameters.OAUTH_USE_TOKEN] = \"always\";\n  params[gadgets.io.RequestParameters.METHOD] = gadgets.io.MethodType.POST;\n  params[gadgets.io.RequestParameters.HEADERS] = {\n    \"X-PrettyPrint\": \"1\",\n    \"GData-Version\": \"3.0\",\n    \"Content-Type\": \"application/atom+xml\"\n  };\n\n  var postdata = \"<entry xmlns=\\\"http://www.w3.org/2005/Atom\\\" xmlns:gsx=\\\"http://schemas.google.com/spreadsheets/2006/extended\\\">\\n  <gsx:id>xid<\\/gsx:id>  \\n  <gsx:sid>xsid<\\/gsx:sid>  \\n  <gsx:msgid>xmsgid<\\/gsx:msgid><gsx:url>xurl<\\/gsx:url>  \\n<\\/entry>\";\n  postdata = postdata.replace(\"xsid\", sessionId);\n  postdata = postdata.replace(\"xurl\", sfurl);\n  postdata = postdata.replace(\"xmsgid\", msg_id);\n  postdata = postdata.replace(\"xid\", parentid);\n  console.log(\"!!!!!!!!!!!!!!!!!! postdata :\" + postdata);\n  params[gadgets.io.RequestParameters.POST_DATA] = postdata;\n  gadgets.io.makeRequest(url, function(obj) {\n//    if (obj.errors[0] == \"400 Error\") {\n    if (obj.errors.length>0) {\n      var prefs = new gadgets.Prefs();\n      prefs.set(\"sheeturl\", '');  \n    }\n  }, params);\n}\n\nfunction sf_attach_rest(url, sessionId, id, whatid) {\n  var restServerUrl = url.split(\"/\")[2];\n  restServerUrl = restServerUrl.replace(\"-api\", \"\");\n  restServerUrl = \"https://\" + restServerUrl;\n  var callUrl = restServerUrl + \"/services/data/v20.0/sobjects/Task/\";\n  var task = {};\n  //    task.AccountId = '';\n  task.Description = email_body + '</BR>message_id:' + message_id;\n  task.Subject = subject;\n  task.WhoId = id;\n  task.Status = 'Abgeschlossen';\n  if (whatid != null) {\n    task.WhatId = whatid;\n  }\n  var params = {};\n  params[gadgets.io.RequestParameters.METHOD] = gadgets.io.MethodType.POST;\n  params[gadgets.io.RequestParameters.CONTENT_TYPE] = gadgets.io.ContentType.JSON;\n  params[gadgets.io.RequestParameters.POST_DATA] = JSON.stringify(task);\n  params[gadgets.io.RequestParameters.HEADERS] = {\n    \"Authorization\": \"OAuth \" + sessionId,\n    \"ACCEPT \": \"JSON\",\n    \"X-PrettyPrint\": \"1\",\n    \"Content-Type\": \"application/json\"\n  };\n  gadgets.io.makeRequest(callUrl, sf_attach_rest_callback, params);\n}\n\nfunction sf_attach_rest_callback(obj) {\n  console.log(\"!!!!!!!!!!!!!!!!!! callback :\" + obj.data);\n  var msg = new gadgets.MiniMessage();\n  msg.createDismissibleMessage(\"Attached: Id  \" + obj.data.id);\n  sf_attach_restSpread(sfurl, token, obj.data.id, message_id);\n}"]],"start1":0,"start2":0,"length1":0,"length2":21193}]],"length":21193}
