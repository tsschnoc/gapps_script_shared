{"ts":1340223110346,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"// Simple proxy server with registrar function.\n\nvar sip = require('sip');\nvar proxy = require('sip/proxy');\nvar util = require('sys');\n\nvar contacts = {};\n\nproxy.start({\n  logger: {\n    recv: function(m) { util.debug('recv:' + util.inspect(m, null, null)); },\n    send: function(m) { util.debug('send:' + util.inspect(m, null, null)); },\n    error: function(e) { util.debug(e.stack); }\n  }\n}, function(rq) {\n  if(rq.method === 'REGISTER') {\n    var user = sip.parseUri(rq.headers.to.uri).user;\n\n    contacts[user] = rq.headers.contact;\n    var rs = sip.makeResponse(rq, 200, 'Ok');\n    rs.headers.to.tag = Math.floor(Math.random() * 1e6);\n    \n    // Notice  _proxy.send_ not sip.send\n    proxy.send(rs);\n  }\n  else {\n    var user = sip.parseUri(rq.uri).user;\n\n    if(contacts[user] && Array.isArray(contacts[user]) && contacts[user].length > 0) {\n      rq.uri = contacts[user][0].uri;\n      \n      proxy.send(sip.makeResponse(rq, 100, 'Trying'));\n      \n      proxy.send(rq);\n    }\n    else {\n      proxy.send(sip.makeResponse(rq, 404, 'Not Found'));\n    }\n  }\n});\n\n"]],"start1":0,"start2":0,"length1":0,"length2":1068}]],"length":1068}
