{"ts":1340217946070,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"// Somewhat practical example. \n// Some time ago i had to connect an softpbx to a service provider. Service provider used some kind of load balancer that\n// responded with '302 Moved Temporarily' to every INVITE. However pbx didn't understand '302' response and was simply dropping\n// outbound calls. So i wrote this script, which restarts all requests responded with '302 Moved', installed it on the \n// same host and set it as outbound proxy for the pbx.\n\nvar sip = require('sip');\nvar proxy = require('sip/proxy');\nvar util = require('sys');\n\nproxy.start(\n{\n  port: 6060,\n  logger : {\n    send: function(m) { util.debug(\"send \" + util.inspect(m, false, null)); },\n    recv: function(m) { util.debug(\"recv \" + util.inspect(m, false, null)); }\n  }\n}, \nfunction(rq) {\n  try {\n    var move_count = 0;\n    proxy.send(rq, function onResponse(rs) {\n      if(rs.status === 302 && rs.headers.contact && rs.headers.contact.length && move_count++ < 4 ) {\n        // restarting request with new target\n        rq.uri = rs.headers.contact[0].uri;\n\n        // proxy.send pushes new via into requests, so we have to remove it\n        rq.headers.via.shift();\n\n        proxy.send(rq, onResponse);\n      }\n      else {\n        // forwarding non-302 response\n       \n        // removing top via\n        rs.headers.via.shift();\n\n        proxy.send(rs);\n      }\n    });\n  } \n  catch(e) {\n    util.debug(e.stack);\n  }\n});\n\n"]],"start1":0,"start2":0,"length1":0,"length2":1404}]],"length":1404}
