{"ts":1342596771901,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"/**\n * Module dependencies.\n */\n\nvar express = require('express');\nvar routes = require('./routes');\nvar http = require('http');\nvar fs = require('fs');\nvar sf = require('node-salesforce');\n\nvar privateKey = fs.readFileSync(__dirname + '/cert/privatekey.pem').toString();\nvar certificate = fs.readFileSync(__dirname + '/cert/certificate.pem').toString();\n\n\n\nvar oAuthCred = {\n    clientId: '3MVG9yZ.WNe6byQCAGhFiyIdi20JeBqsJMl08zG78oid52IgoB_2OMjH_0yrCXpn_DFpAP3TjZEvMdQNG.1t0',\n    clientSecret: '8497562417111142248',\n    redirectUri: 'https://gapps_script_shared.tsschnoc.c9.io/oauth2/callback'\n};\n\n// https://ec2-23-22-135-42.compute-1.amazonaws.com:8090/oauth2/auth\n//http://silas.sewell.org/blog/2010/06/03/node-js-https-ssl-server-example/\n//var app = express.createServer();\nvar app = module.exports = express.createServer({\n    key: privateKey,\n    cert: certificate\n});\n\n//var app = express();\nconsole.log(process.env.PORT);\n\napp.configure(function() {\n    app.set('port', process.env.PORT || 3000);\n    app.set('views', __dirname + '/views');\n    app.set('view engine', 'jade');\n    app.use(express.favicon());\n    app.use(express.logger('dev'));\n    app.use(express.bodyParser());\n    app.use(express.methodOverride());\n    app.use(app.router);\n    app.use(express.static(__dirname + '/public'));\n});\n\napp.configure('development', function() {\n    app.use(express.errorHandler());\n});\n\n\napp.get('/oauth2/callback', function(req, res) {\n    console.log(\"callback!!!!!!!!! \");\n\n    var conn = new sf.Connection({\n        clientId: oAuthCred.clientId,\n        clientSecret: oAuthCred.clientSecret,\n        redirectUri: oAuthCred.redirectUri\n    });\n    var code = req.param('code');\n    conn.authorize(code, function(err) {\n        if (!err) {                        \n            var idCallback = function(err, identity) {\n              if (!err) {\n                console.log('identity : ' + JSON.stringify(identity, null, '\\t'));\n                console.log(conn.accessToken);\n                console.log(conn.refreshToken);\n                res.render('index.jade', { title: 'My Site' , 'identity': identity.id});\n                //res.sendfile(__dirname + \"/index.html\");\n              }\n            };            \n            \n            conn.baseRequest(function(err, base) {\n              if (!err) {\n                console.log('Base : ' + base.identity);\n                console.log('Base : ' + JSON.stringify(base, null, '\\t'));\n                \n                conn.request(base.identity,idCallback);\n              }\n            });            \n        }\n        else {\n            console.log(err);\n            res.sendfile(__dirname + \"/index.html\");\n        }\n    });\n});\n\n\napp.get('/', function(req, res){\n    res.render('index.jade', { title: 'My Site' });\n});\n\n//app.get('/', routes.index);\n\napp.get('/oauth2/auth', function(req, res) {\n    var conn = new sf.Connection({\n        clientId: oAuthCred.clientId,\n        clientSecret: oAuthCred.clientSecret,\n        redirectUri: oAuthCred.redirectUri\n    });\n\n    var authUrl = conn.oauth2.getAuthorizationUrl({\n        scope: 'api id refresh_token'\n    });\n    console.log(\"authUrl: \" + authUrl);\n\n    res.redirect(authUrl);\n});\n\n\nsf.Connection.prototype.baseRequest = function(callback) {\n  var url = this.urls.rest.base;\n  this._request({\n    method : 'GET',\n    url : url\n  }, callback);\n};\n\nsf.Connection.prototype.request = function(url, callback) {\n  this._request({\n    method : 'GET',\n    url : url\n  }, callback);\n};\n\n\n\n\n\n\nhttp.createServer(app).listen(app.get('port'), function() {\n    console.log(\"Express server listening on port \" + app.get('port'));\n});"]],"start1":0,"start2":0,"length1":0,"length2":3642}]],"length":3642}
