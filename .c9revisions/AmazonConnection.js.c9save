{"ts":1342686672699,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"function AmazonConnection() {\n  //http://mckoss.com/jscript/object.htm\n  _ACCESS_KEY_ID = null;\n  _SECRET_ACCESS_KEY = null;\n}\n\n/**\n * Sets the credentials authentication string\n */\nAmazonConnection.prototype.setCredentials = function(ACCESS_KEY_ID, SECRET_ACCESS_KEY) {\n  this._ACCESS_KEY_ID = ACCESS_KEY_ID;\n  this._SECRET_ACCESS_KEY = SECRET_ACCESS_KEY;\n};\n\nAmazonConnection.prototype.sendMail = function(sourceAddress, toAddress, subject, body) {\n  var timeStamp = Utilities.formatDate(new Date(), \"GMT\", \"EEE, dd MMM yyyy HH:mm:ss\");\n  timeStamp = timeStamp + ' GMT';\n  var step1 = Utilities.computeHmacSha256Signature(timeStamp, this._SECRET_ACCESS_KEY);\n  var sig = Utilities.base64Encode(step1);\n  \n  Logger.log(timeStamp);\n  var auth = 'AWS3-HTTPS AWSAccessKeyId=' + this._ACCESS_KEY_ID + ',Algorithm=HMACSHA256,Signature=' + sig;\n  \n  Logger.log(auth);\n  var url = 'https://email.us-east-1.amazonaws.com/?Action=SendEmail&Source=' + encodeURIComponent(sourceAddress) + '&Destination.ToAddresses.member.1=' + encodeURIComponent(toAddress) + '&Message.Subject.Data=' + encodeURIComponent(subject) + '&Message.Body.Text.Data=' + encodeURIComponent(body) + '';\n  Logger.log(url);\n  var response = UrlFetchApp.fetch(url, {\n    method: 'get',\n    headers: {\n      'X-Amzn-Authorization': auth,\n      Date: timeStamp\n    },\n    contentType: \"application/x-www-form-urlencoded; charset=UTF-8\"\n  });\n  Logger.log(response.getContentText());\n}; \n \nAmazonConnection.prototype.sendHtmlMail = function(sourceAddress, toAddress, subject, body) {\n  var timeStamp = Utilities.formatDate(new Date(), \"GMT\", \"EEE, dd MMM yyyy HH:mm:ss\");\n  timeStamp = timeStamp + ' GMT';\n  var step1 = Utilities.computeHmacSha256Signature(timeStamp, this._SECRET_ACCESS_KEY);\n  var sig = Utilities.base64Encode(step1);\n  \n  Logger.log(timeStamp);\n  var auth = 'AWS3-HTTPS AWSAccessKeyId=' + this._ACCESS_KEY_ID + ',Algorithm=HMACSHA256,Signature=' + sig;\n  \n  Logger.log(auth);\n//  var url = 'https://email.us-east-1.amazonaws.com/?Action=SendEmail&Source=' + encodeURIComponent(sourceAddress) + '&Destination.ToAddresses.member.1=' + encodeURIComponent(toAddress) + '&Message.Subject.Data=' + encodeURIComponent(subject) + '&Message.Body.Text.Data=' + encodeURIComponent(body) + '';\n\n  var raw = '';\n  raw += 'Subject: ' + subject + '\\n';\n  raw += 'From: ' + sourceAddress + '\\n';\n  raw += 'To: ' + toAddress + '\\n';\n  raw += 'Content-Type: text/html; charset=ISO-8859-1\\n';\n  raw += '\\n';\n  raw += body + '\\n' + '\\n';\n  Logger.log(raw);\n  raw = Utilities.base64Encode(raw);\n  Logger.log(raw);\n  raw = encodeURIComponent(raw);\n  Logger.log(raw);\n\n  var url = 'https://email.us-east-1.amazonaws.com/?Action=SendRawEmail&RawMessage.Data='+raw;\n  Logger.log(url);\n/*  var response = UrlFetchApp.fetch(url, {\n    method: 'get',\n    headers: {\n      'X-Amzn-Authorization': auth,\n      Date: timeStamp\n    },\n    contentType: \"application/x-www-form-urlencoded; charset=UTF-8\"\n  });\n  */\n  var response = UrlFetchApp.fetch('https://email.us-east-1.amazonaws.com', \n     {\n       method:'post', \n       headers : {\n         'X-Amzn-Authorization': auth,\n         Date : timeStamp\n       }, \n       contentType:\"application/x-www-form-urlencoded; charset=UTF-8\",\n       payload: \"AWSAccessKeyId=\" + this._ACCESS_KEY_ID + \"&Action=SendRawEmail&RawMessage.Data=\" + raw + \"&Timestamp=\" + timeStamp + \"\"\n     }   \n    ); \n  \n  Logger.log(response.getContentText());\n};\n\nAmazonConnection.prototype.amazonSearch = function(searchIndex, keyWord) {\n  var timeStamp = Utilities.formatDate(new Date(), \"GMT\", \"yyyy-MM-dd'T'HH:mm:ss'Z'\");\n  var valueForSignature = \"ItemSearch\" + timeStamp;\n  var step1 = Utilities.computeHmacSha256Signature(valueForSignature, this._SECRET_ACCESS_KEY);\n  var sig = Utilities.base64Encode(step1);\n  var param = [\"ItemSearch\", [\"AWSAccessKeyId\", this._ACCESS_KEY_ID],\n    [\"Signature\", sig],\n    [\"Timestamp\", timeStamp],\n    [\"Request\", [\"SearchIndex\", searchIndex],\n      [\"Keywords\", keyWord]\n    ]\n  ];\n  var wsdl = SoapService.wsdl(\"http://webservices.amazon.com/AWSECommerceService/\" + \"AWSECommerceService.wsdl\");\n  var awseService = wsdl.getService(\"AWSECommerceService\");\n  var result = awseService.ItemSearch(param);\n  var list = result.Envelope.Body.ItemSearchResponse.Items.Item;\n  var items = [];\n  for (var i = 0; i < list.length; i++) {\n    item = {};\n    item.Title = list[i].ItemAttributes.Title.getText();\n    item.Manufacturer = list[i].ItemAttributes.Manufacturer.getText();\n    item.DetailPageURL = list[i].DetailPageURL.getText();\n    items.push(item);\n  }\n  return items;\n};\nAmazonConnection.prototype.signParams = function(HTTPVerb, ValueOfHostHeaderInLowercase, HTTPRequestURI, queryStrings) {\n  var toSign = HTTPVerb + \"\\n\" + ValueOfHostHeaderInLowercase + \"\\n\" + HTTPRequestURI + \"\\n\";\n  var timeStamp = Utilities.formatDate(new Date(), \"GMT\", \"yyyy-MM-dd'T'HH:mm:ss.000'Z'\");\n  queryStrings.push({\n    key: \"SignatureMethod\",\n    value: \"HmacSHA256\"\n  });\n  queryStrings.push({\n    key: \"SignatureVersion\",\n    value: \"2\"\n  });\n  queryStrings.push({\n    key: \"Timestamp\",\n    value: encodeURIComponent(timeStamp)\n  });\n  queryStrings.push({\n    key: \"AWSAccessKeyId\",\n    value: encodeURIComponent(this._ACCESS_KEY_ID)\n  });\n  queryStrings.sort(function(a, b) {\n    if (a.key < b.key) {\n      return -1;\n    }\n    if (a.key < b.key) {\n      return 1;\n    }\n    return 0;\n  });\n  queryStrings.forEach(function(queryString, i) {\n    toSign += queryString.key + \"=\" + queryString.value + \"&\";\n  });\n  toSign = toSign.substr(0, toSign.length - 1);\n  Logger.log(toSign);\n  var step1 = Utilities.computeHmacSha256Signature(\n  toSign, this._SECRET_ACCESS_KEY);\n  var sig = Utilities.base64Encode(step1);\n  var signedParams = '?';\n  queryStrings.push({\n    key: \"Signature\",\n    value: encodeURIComponent(sig)\n  });\n  queryStrings.sort(function(a, b) {\n    if (a.key < b.key) {\n      return -1;\n    }\n    if (a.key < b.key) {\n      return 1;\n    }\n    return 0;\n  });\n  queryStrings.forEach(function(queryString, i) {\n    signedParams += queryString.key + \"=\" + queryString.value + \"&\";\n  });\n  signedParams = signedParams.substr(0, signedParams.length - 1);\n  Logger.log(signedParams);\n  return signedParams;\n};"]],"start1":0,"start2":0,"length1":0,"length2":6223}]],"length":6223}
