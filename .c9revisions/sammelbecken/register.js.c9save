{"ts":1342514672358,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"var sip = require('sip');\nvar digest = require('sip/digest');\nvar sf = require('node-salesforce');\nvar Pusher = require('node-pusher');\n\nvar mysipport = '5060';\nvar myhost = 'ec2-23-22-135-42.compute-1.amazonaws.com';\n\n\nvar pusher = new Pusher({\n  appId: '10536',\n  key: '0bcfb89cee9d117b2b4e',\n  secret: '14404ce2f3383cb9222b'\n});\n\n\n\nconsole.log('XXXXXXXXXXX    ADDRESS XXXXXXXXXXXXX');\nconsole.log('sip:' + myhost + ':' + mysipport);\n\n\nvar uri = 'sip:0435009722.320@sip12.e-fon.ch';\nvar cred = {\n  user: '0435009722.320',\n  password: 'parxwerk123',\n  realm: 'asterisk'\n};\n\n/*\nvar uri = 'sip:1835084@sipgate.de';\nvar cred = {\n  user: '1835084',\n  password: 'AUPSSZ',\n  realm: 'sipgate.de'\n};\n*/\n\n\n\n\n//http://level7systems.co.uk/en/blog/Click+to+Call+with+PHP-SIP\n\nvar authReg = {\n    method: 'REGISTER',\n    uri: uri,\n    headers: {\n      to: {\n        uri: uri\n      },\n      from: {\n        uri: uri,\n        params: {\n          tag: '12345678'\n        }\n      },\n      'call-id': Math.floor(Math.random() * 1e6),\n      cseq: {\n        method: 'REGISTER',\n        seq: 1\n      },\n      event: 'dialog',\n      accept: 'application/dialog-info+xml',\n      expires: 3600,\n      contact: [{\n\n        uri: 'sip:' + myhost + ':' + mysipport\n      }]\n    }\n  };\n  \n  \nvar subscribeMsg = {\n    method: 'SUBSCRIBE',\n    uri: uri + ';user=phone',\n    headers: {\n      to: {\n        uri: uri + ';user=phone'\n      },\n      from: {\n        uri: uri,\n        params: {\n          tag: '12345678'\n        }\n      },\n      'call-id': Math.floor(Math.random() * 1e6),\n      cseq: {\n        method: 'SUBSCRIBE',\n        seq: 2\n      },\n      event: 'dialog',\n      accept: 'application/dialog-info+xml',\n      expires: 3600,\n      contact: [{\n        uri: 'sip:' + myhost + ':' + mysipport\n      }]\n    }\n  };\n\n\nsip.start({\n  port: mysipport,\n  logger: {\n//    recv: console.log,\n    send: console.log\n  }\n}, function(rq) {\n  console.log('XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX');\n  console.log('XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX');\n  console.log('XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX');\n  console.log('XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX');\n  console.log('XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX');\n  console.log('XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX');\n  console.log(rq);\n  console.log(rq.headers);\n  \n\tif(rq.method === 'INVITE') {\n//\t\tsip.send(sip.makeResponse(rq, 100, 'Trying'));\n\t    \tsip.send(sip.makeResponse(rq, 180, 'Ringing'));\n\n\n\n\t\tvar number = rq.headers.from.uri;\n\t\tvar callid = rq.headers['call-id'];\n\n\npusher.trigger('test_channel', 'my_event', {\"number\" : number.split(':')[1]  }, null, function(err, req, res) {\n  console.log('XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX   pusher ');\n  console.log(err);\n\n  console.log(req);\n\n  console.log(res);\n\n});\n\n\n\t\tvar now = new Date();\n\t\tvar jsonDate = now.toJSON();\n\n\t\tsip.send(sip.makeResponse(rq, 180, 'Ringing'));\n\n\t\tconn.sobject(\"SipLog__c\").upsert({ \n\t\t\tCallId__c : callid,\n\t\t\tNumber__c : number,\n\t\t\tTimestampRing__c : jsonDate\t\t\n\t\t}, 'CallId__c', function(err, ret) {\n\t\t  if (!err && ret.success) {\n\t\t    console.log('Upserted Successfully');\n\t\t  }\n\t\t});\n\n\n\n\n\t} else if(rq.method === 'CANCEL') {\n\t\tvar number = rq.headers.from.uri;\n\t\tvar callid = rq.headers['call-id'];\n\n\t\tvar now = new Date();\n\t\tvar jsonDate = now.toJSON();\n\n\t\tsip.send(sip.makeResponse(rq, 180, 'Ringing'));\n\n\t\tconn.sobject(\"SipLog__c\").upsert({ \n\t\t\tCallId__c : callid,\n\t\t\tNumber__c : number,\n\t\t\tTimestampCancel__c : jsonDate\t\t\n\t\t}, 'CallId__c', function(err, ret) {\n\t\t  if (!err && ret.success) {\n\t\t    console.log('Upserted Successfully');\n\t\t  }\n\t\t});\n\t}\n    \n});\n\n\n\n\nregister();\n//subscribe();\n\nvar conn = new sf.Connection({\n\tloginUrl : 'https://login.salesforce.com'\n});\n\nfunction sfLogin() {\n\tconn.login('thomas.schnocklake.sfdc1@gmail.com', 'Mantila110577tsKeNIY6Qn26WXnydPZaTwziQW', function(err) {\n\t\tif (!err) {\n\t\t\tconsole.log('------------------------Login SF token------------------------------------');\n\t\t\tconsole.log(conn.accessToken);\n\n\t\t\tsetTimeout(function(){\n\t\t\t\tconsole.log('------------------------RE Login SF------------------------------------');\n\t\t\t\tsfLogin();\n\t\t\t}, 600000);\n\n\n\t\t} else {\n\t\t\tconsole.log(err);\n\t\t}\n\t});\n}\n\nsfLogin();\n\n\nfunction register() {\ndelete authReg.headers.via;\n  sip.send(authReg, function(rs) {\n    console.log('CCCCCCCCCCCCC response on register CCCCCCCCCCCCCCCC');\n    console.log(JSON.stringify(rs,null,'\\t'));    \n\n    if(rs.status === 401)  //reason Unauthorized\n    {  \n    console.log('CyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyC' + cred.realm);\n    console.log('CyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyC' + JSON.stringify(rs.headers[\"www-authenticate\"]));\n    console.log('CyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyC' + JSON.stringify(rs.headers[\"www-authenticate\"][\"realm\"]));\n\n      digest.signRequest({\n        realm: cred.realm\n      }, authReg, rs, cred);\n\n\n    console.log('CyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyC');\n    console.log(authReg);    \n      \n      register();\n    } else if(rs.status === 200)  //reason OK\n    {\n      console.log('------------------------REGISTERED------------------------------------');\n\n\n  \n  \tsetTimeout(function(){\n\t\t\tconsole.log('------------------------REREGISTERIND------------------------------------');\n\t\t\tregister();\n\t\t}, 300000);\n\n//\tsubscribe();\n\n\n\n    }\n  \n  });\n}\n\n\n\nfunction subscribe() {\n  sip.send(subscribeMsg , function(rs) {\n    console.log('CCCCCCCCCCCCC response on subscribe CCCCCCCCCCCCCCCC');\n    console.log(JSON.stringify(rs,null,'\\t'));    \n\n    if(rs.status === 407)  //reason Unauthorized\n    {  \n\n      digest.signRequest({\n        realm: cred.realm\n      }, subscribeMsg, rs, cred);\n\n      \n      subscribe();\n    } else if(rs.status === 200)  //reason OK\n    {\n      console.log('------------------------SUBSCRIBED------------------------------------');\n\n    }\n  \n  });\n}\n\n"]],"start1":0,"start2":0,"length1":0,"length2":5800}]],"length":5800}
