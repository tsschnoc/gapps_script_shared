{"ts":1340658956960,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"var fs = require('fs');\nvar http = require('http');\nvar url = require('url');\nvar spawn = require('child_process').spawn;\n//    urlModule     = require('url'),\n//    querystring   = require('querystring');\n\nthis.server = http.createServer(function(request, response) {\n  \n\n\tresponse.writeHeader(200, {'Content-Type': 'image/png'});\nconsole.log(url.parse(request.url, true));\nconsole.log(['--url=' + url.parse(request.url, true).query.url, '--out=test1.png']);\n\n\t// Start convert reading in an svg and outputting a png\n//  var convert\t= spawn('./CutyCapt', ['--url=' + url.parse(request.url, true).query.url, '--out=test1.png']);\n  var convert\t= spawn('ls', ['-la','>','test.png']);\n\n\t// We're writing an image, hopefully...\n\tresponse.writeHeader(200, {'Content-Type': 'image/png'});\n\n\n\n\t// When we're done rendering, we're done\n\tconvert.on('exit', function(code) {\n\t\tvar file = fs.createReadStream(\"test1.png\");\n\t\tfile.on('exit', function(code) {\n\t\t\tresponse.end();\n\t\t});\n\t\tfile.pipe(response);\n\t});\n}).listen(process.env.PORT);\n"]],"start1":0,"start2":0,"length1":0,"length2":1029}]],"length":1029}
