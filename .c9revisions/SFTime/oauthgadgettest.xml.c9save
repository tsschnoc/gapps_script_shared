{"ts":1374143422692,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":true,"ts":1374143305361,"patch":[[{"diffs":[[1,"<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\r\n<Module>\r\n  <ModulePrefs title=\"OAuth Contacts\" scrolling=\"true\">\r\n    <Require feature=\"locked-domain\"/>\r\n    <OAuth>\r\n      <Service name=\"google\">\r\n        <Access url=\"https://www.google.com/accounts/OAuthGetAccessToken\" method=\"GET\" />\r\n        <Request url=\"https://www.google.com/accounts/OAuthGetRequestToken?scope=http://www.google.com/m8/feeds/\" method=\"GET\" />\r\n        <Authorization url=\"https://www.google.com/accounts/OAuthAuthorizeToken?oauth_callback=http://oauth.gmodules.com/gadgets/oauthcallback\" />\r\n      </Service>\r\n    </OAuth>\r\n  </ModulePrefs>\r\n  <Content type=\"html\">\r\n  <![CDATA[\r\n\r\n  <!-- shindig oauth popup handling code -->\r\n  <script src=\"http://gadget-doc-examples.googlecode.com/svn/trunk/opensocial-gadgets/popup.js\"></script>\r\n\r\n  <style>\r\n  #main {\r\n    margin: 0px;\r\n    padding: 0px;\r\n    font-size: small;\r\n  }\r\n  </style>\r\n\r\n  <div id=\"main\" style=\"display: none\">\r\n  </div>\r\n\r\n  <div id=\"approval\" style=\"display: none\">\r\n    <img src=\"http://gadget-doc-examples.googlecode.com/svn/trunk/images/new.gif\">\r\n    <a href=\"#\" id=\"personalize\">Personalize this gadget</a>\r\n  </div>\r\n\r\n  <div id=\"waiting\" style=\"display: none\">\r\n    Please click\r\n    <a href=\"#\" id=\"approvaldone\">I've approved access</a>\r\n    once you've approved access to your data.\r\n  </div>\r\n\r\n  <script type=\"text/javascript\">\r\n    // Display UI depending on OAuth access state of the gadget (see <divs> above).\r\n    // If user hasn't approved access to data, provide a \"Personalize this gadget\" link\r\n    // that contains the oauthApprovalUrl returned from makeRequest.\r\n    //\r\n    // If the user has opened the popup window but hasn't yet approved access, display\r\n    // text prompting the user to confirm that s/he approved access to data.  The user\r\n    // may not ever need to click this link, if the gadget is able to automatically\r\n    // detect when the user has approved access, but showing the link gives users\r\n    // an option to fetch their data even if the automatic detection fails.\r\n    //\r\n    // When the user confirms access, the fetchData() function is invoked again to\r\n    // obtain and display the user's data.\r\n    function showOneSection(toshow) {\r\n      var sections = [ 'main', 'approval', 'waiting' ];\r\n      for (var i=0; i < sections.length; ++i) {\r\n        var s = sections[i];\r\n        var el = document.getElementById(s);\r\n        if (s === toshow) {\r\n          el.style.display = \"block\";\r\n        } else {\r\n          el.style.display = \"none\";\r\n        }\r\n      }\r\n    }\r\n\r\n    // Process returned JSON feed to display data.\r\n    function showResults(result) {\r\n      showOneSection('main');\r\n\r\n      var titleElement = document.createElement('div');\r\n      var nameNode = document.createTextNode(result.feed.title.$t);\r\n      titleElement.appendChild(nameNode);\r\n      document.getElementById(\"main\").appendChild(titleElement);\r\n      document.getElementById(\"main\").appendChild(document.createElement(\"br\"));\r\n\r\n      list = result.feed.entry;\r\n\r\n      for(var i = 0; i < list.length; i++) {\r\n        entry = list[i];\r\n        var divElement = document.createElement('div');\r\n        divElement.setAttribute('class', 'name');\r\n        divElement.appendChild(nameNode);\r\n        if (entry.gd$email) {\r\n          var valueNode = document.createTextNode(entry.gd$email[0].address);\r\n          divElement.appendChild(valueNode);\r\n        }\r\n        document.getElementById(\"main\").appendChild(divElement);\r\n      }\r\n    }\r\n\r\n    // Invoke makeRequest() to fetch data from the service provider endpoint.\r\n    // Depending on the results of makeRequest, decide which version of the UI\r\n    // to ask showOneSection() to display. If user has approved access to his\r\n    // or her data, display data.\r\n    // If the user hasn't approved access yet, response.oauthApprovalUrl contains a\r\n    // URL that includes a Google-supplied request token. This is presented in the\r\n    // gadget as a link that the user clicks to begin the approval process.\r\n    function fetchData() {\r\n      var params = {};\r\n      url = \"http://www.google.com/m8/feeds/contacts/default/base?alt=json\";\r\n      params[gadgets.io.RequestParameters.CONTENT_TYPE] = gadgets.io.ContentType.JSON;\r\n      params[gadgets.io.RequestParameters.AUTHORIZATION] = gadgets.io.AuthorizationType.OAUTH;\r\n      params[gadgets.io.RequestParameters.OAUTH_SERVICE_NAME] = \"google\";\r\n      params[gadgets.io.RequestParameters.OAUTH_USE_TOKEN] = \"always\";\r\n      params[gadgets.io.RequestParameters.METHOD] = gadgets.io.MethodType.GET;\r\n\r\n      gadgets.io.makeRequest(url, function (response) {\r\n        if (response.oauthApprovalUrl) {\r\n          // Create the popup handler. The onOpen function is called when the user\r\n          // opens the popup window. The onClose function is called when the popup\r\n          // window is closed.\r\n          var popup = shindig.oauth.popup({\r\n            destination: response.oauthApprovalUrl,\r\n            windowOptions: null,\r\n            onOpen: function() { showOneSection('waiting'); },\r\n            onClose: function() { fetchData(); }\r\n          });\r\n          // Use the popup handler to attach onclick handlers to UI elements.  The\r\n          // createOpenerOnClick() function returns an onclick handler to open the\r\n          // popup window.  The createApprovedOnClick function returns an onclick\r\n          // handler that will close the popup window and attempt to fetch the user's\r\n          // data again.\r\n          var personalize = document.getElementById('personalize');\r\n          personalize.onclick = popup.createOpenerOnClick();\r\n          var approvaldone = document.getElementById('approvaldone');\r\n          approvaldone.onclick = popup.createApprovedOnClick();\r\n          showOneSection('approval');\r\n        } else if (response.data) {\r\n            showOneSection('main');\r\n            showResults(response.data);\r\n        } else {\r\n            // The response.oauthError and response.oauthErrorText values may help debug\r\n            // problems with your gadget.\r\n            var main = document.getElementById('main');\r\n            var err = document.createTextNode('OAuth error: ' +\r\n              response.oauthError + ': ' + response.oauthErrorText);\r\n            main.appendChild(err);\r\n            showOneSection('main');\r\n        }\r\n      }, params);\r\n    }\r\n    // Call fetchData() when gadget loads.\r\n    gadgets.util.registerOnLoadHandler(fetchData);\r\n  </script>\r\n  ]]>\r\n  </Content>\r\n</Module>"]],"start1":0,"start2":0,"length1":0,"length2":6511}]],"length":6511,"saved":false}
